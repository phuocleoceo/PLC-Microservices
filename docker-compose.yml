# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.
version: '3.4'

services:
  catalogdb:
    image: mongo
    container_name: catalogdb
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    restart: always
  ################################################################################
  catalog.api:
    image: catalogapi
    container_name: catalog.api
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
      - catalogdb
    ports:
      - 8000:80
  ################################################################################
  basketdb:
    image: redis:alpine
    container_name: basketdb
    ports:
      - "6379:6379"
    restart: always
  ################################################################################
  basket.api:
    image: basketapi
    container_name: basket.api
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "GrpcSettings:DiscountUrl=http://discount.grpc"
    depends_on:
      - basketdb
    ports:
      - "8001:80"
  ################################################################################
  discountdb:
    image: postgres
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=DiscountDb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
  ################################################################################
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
    restart: always
  ################################################################################
  discount.api:
    image: discountapi
    container_name: discount.api
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin;"
    depends_on:
      - discountdb
    ports:
      - "8002:80"
  ################################################################################
  discount.grpc:
    image: discountgrpc
    container_name: discount.grpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin;"
    depends_on:
      - discountdb
    ports:
      - "8003:80"
  ################################################################################
  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: orderdb
    environment:
      SA_PASSWORD: "@dmin1234"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    restart: always
  ################################################################################
  ordering.api:
    image: orderingapi
    container_name: ordering.api
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderCNS=Server=orderdb;Database=OrderDb;User Id=sa;Password=@dmin1234"
    depends_on:
      - orderdb
    ports:
      - "8004:80"

volumes:
  mongo_data:
  postgres_data:
  pgadmin_data:
